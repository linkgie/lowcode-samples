
#######################################
# 服务器的网络接入
#######################################

# 声明应用服务的名称；
server.name=GAPP-DEMO

# 声明应用服务绑定的本地网络地址；
server.address=0.0.0.0

# HTTP 服务的本地网络端口；
server.port=8080
# HTTP 服务的上下文路径；
server.servlet.context-path=/

# 声明应用服务的公网地址；
server.public-address=
# HTTP 服务的公共网络端口；
server.public-port=


#######################################
# SSL 安全证书配置
#######################################

# 开启 SSL ；
server.ssl.enabled=false
#server.ssl.key-store-type=JKS
#server.ssl.keyStore=
#server.ssl.key-store-password=

# 当开启 SSL 时(server.ssl.enabled=true) ，
# 1. 如果此属性设置为 true 时，用户在 server.ssl.constraint.port 属性指定的端口发起非安全连接（http）时，
#    将被强制性地重定向自动转为安全连接（https）；设置为 true 可以提供更好的用户兼容性；
# 2. 如果此属性设置为 false 时，直接拒绝而不是重定向用户发起的非安全连接（http）；

#server.ssl.constraint.enabled=true

# 当 server.ssl.constraint.enabled 属性为 true 时，允许执行重定向的非安全连接（http）的端口；
#server.ssl.constraint.port=80

#######################################
# HTTP 文件上传配置
#######################################

# 文件服务上传的文件总大小的最大值；
spring.servlet.multipart.max-request-size=100MB
# 文件服务上传的单个文件大小的最大值；
spring.servlet.multipart.max-file-size=20MB


#######################################
# Tomcat 配置
#######################################
server.tomcat.basedir=${application.home}/runtime/tomcat

# 开启访问日志
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=${application.home}/logs/tomcat

# 访问日志格式：%h - 远程主机名称 |  %A - 本地IP地址 | %v - 本地服务名 | %p - 接受请求的本地端口 | %t - 日期和时间 | %S - 用户的session ID | 
#             %r - 请求的第一行(包括请求方法和请求的URI) | %s - response的HTTP状态码(200,404等) | %b - 发送的字节数(Bytes sent), 不包括HTTP headers的字节 | %D - 处理请求的时间，单位为毫秒 |
#             %{X-Forwarded-For}i - HTTP请求头 X-Forwarded-For | %{Referer}i - HTTP请求头 Referer | %{User-Agent}i - HTTP请求头 User-Agent 
server.tomcat.accesslog.pattern=%h %A %v %p %t %S "%r" %s %b %D "%{X-Forwarded-For}i" "%{Referer}i" "%{User-Agent}i"


#######################################
# ssh 命令控制台；
#######################################

# 激活 SSH Shell 服务；
shell.ssh.enable=false

# 当 Web 服务启动时自动运行 SSH Shell 服务； 
# 只有当 shell.ssh.enable 为 true 时此属性才会生效；
shell.ssh.auto-run=true

# SSH Shell 服务绑定的 IP 地址；
# 指定为环回地址 127.0.0.1 时只接收本机请求；
shell.ssh.host=127.0.0.1

# SSH Shell 服务的接入端口；
shell.ssh.port=7022

# SSH Shell 服务客户端的命令行提示符前缀；
shell.ssh.prompt-prefix=galaxy(ssh)

# 是否启用密码口令；
#shell.ssh.enable-password=true

#######################################
#日志
#######################################
#logging.level.org.springframework=INFO


#######################################
# Web 配置
#######################################
# 以 @HttpService 标注的服务 URL 的路径前缀；
# 默认值：/api 
#galaxyplatform.web.http-service.path-prefix=/api


# 设置首页 URL；
# 默认值：/index.html ；
# galaxyplatform.web.index-page=index.html


# 设置跨源资源共享（CORS: Cross Origin Resource Share）；
# galaxyplatform.web.cors.allows[/api/ffs/secure/**].headers=*
# galaxyplatform.web.cors.allows[/api/ffs/secure/**].methods=*
# galaxyplatform.web.cors.allows[/api/ffs/secure/**].origins=http://site1-host:8081, https://site2-host:8082


#######################################
# 安全管理
#######################################

# 初始化根账户；
# 如果不指定根用户名，则不自动初始化根用户；
galaxyplatform.security.account.root.username=root
# 初始化根账户的登录口令；如果不设置，则会在首次启动初始化的时候生成一个随机口令输出到日志文件中；
# galaxyplatform.security.account.root.password=root@123

# 根账户的授权；
# 注：根账号会默认地授予根角色 ROLE:SYSTEM://ROOT/ROOT 权限，不需要显式声明；
#galaxyplatform.security.account.root.authorities=

#------------------------
# 定义角色；（角色名称大小不敏感）
#------------------------
# 1. 系统预定义角色；
# 系统有 3 个预定义的默认角色 ROOT 、 ADMIN 、 EVERYONE ，不需要显式地声明：
# ROOT          系统根账号角色，默认授予根账号；
# ADMIN         组织管理员角色，默认授予任意组织的管理员，当账号被解除组织管理员身份后，该权限自动失效；
# EVERYONE      普通账号角色，默认授予任意账号；
#
# 2. 配置预定义角色；
# 按以下设置可声明预定义角色；
# galaxyplatform.security.rbac.roles=GUEST
#

#------------------------
# 定义角色的预定义权限列表；
#------------------------
# 根账号角色的授权；
# 注：此角色的授权会直接合并到根账号的权限列表；
galaxyplatform.security.rbac.authorities.ROOT=FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-REGISTER,\
                                              FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-AUTHORIZE,\
                                              FEATURE://CONSOLE/MENU/SECURITY/SECURITY-ACCOUNT,\
                                              FEATURE://CONSOLE/MENU/SECURITY/SECURITY-ROLE,\
                                              FEATURE://CONSOLE/MENU/SECURITY/SECURITY-AUTHORIZE-ACCOUNT,\
                                              FEATURE://CONSOLE/MENU/SYSTEM-CONFIG/EMAIL-SERVER-CONFIG
# 组织管理员角色的授权；
# 注：对机构管理员角色最终获得的权限会受到所在机构的权限范围约束，不能超出机构获得的权限列表；
galaxyplatform.security.rbac.authorities.ADMIN=FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-SETTINGS,\
                                               FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/JOB-MANAGEMENT,\
                                               FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/EMPLOYEE-MANAGEMEMT,\
                                               FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-MEMBER-REGISTER,\
                                               FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-MEMBER-AUTHORIZE,\
                                               FEATURE://CONSOLE/MENU/BUSI/BUSI-REGISTER,\
                                               FEATURE://CONSOLE/MENU/FILE-SERVICE-MNGMT/FILE-ACCESS-AUTHORIZE

# 普通账号角色的授权；
# 注：此角色会直接合并到所有用户的权限列表；
galaxyplatform.security.rbac.authorities.EVERYONE=FEATURE://PLATFORM/TOOLBAR/TBAR-LOGOUT,\
                                                  FEATURE://PLATFORM/TOOLBAR/TBAR-ACCOUNT-PROFILE

# 账户缓存参数设置；
# 账户缓存的过期时间，默认 30， 单位：秒；
galaxyplatform.security.account.cache.expire=30
# 账户缓存的最大记录数，默认 100000 ;
galaxyplatform.security.account.cache.max-size=100000



#------------------------
# 密钥库设置；
#------------------------
# 是否自动初始化；
# 当设置为 true 时，并且 password-supply.interactive=false ，则自动初始化密钥库；
# galaxyplatform.security.keystore.auto-init=false

# 密钥库的口令输入方式是否为交互方式； 默认为 false ；
# 当设置为 true 时，初始化密钥库或者请求密钥的时候，会要求以交互的方式实时地由操作者提供口令（密钥解密口令）；此种方式会导致后台任务由于缺少交互环境而无法正常执行
# 当设置为 false 时，采用系统内置的口令管理器；此种方式有利于后台任务执行；
# galaxyplatform.security.keystore.password-supply.interactive=false


#------------------------
# 开放用户注册设置；
#------------------------
# 是否开放用户自行注册账号；默认为false；
# galaxyplatform.security.account.user-register.open=false
# 是否自动批准注册申请并创建用户账号；默认为false；
# galaxyplatform.security.account.user-register.auto-approve=false
# 用户信息中如果设置了手机号码，是否必须验证用户手机号码；默认为 false ;
# 设置为 true 时，需要系统开通接入短信服务才能使用；
# galaxyplatform.security.account.user-register.phone-number-verify=false
# 是否为开放注册用户赋予公钥身份；默认为 false ；
# galaxyplatform.security.account.user-register.public-key-identity=false
# 开放注册用户的默认角色；
# galaxyplatform.security.account.user-register.default-roles=DEVELOPER




#------------------------
# 图片校验码；
#------------------------

# 是否启用验证码机制；默认为 false ；
# 
# 启用后，请求 URL /security/verification 可以获得一段 jpg 格式 base64 编码的验证码图片；
# 注：此 URL 会自动注册为匿名 API URL (等同于配置属性 galaxyplatform.security.web.anonymous-urls )；
galaxyplatform.security.web.verify.enable=true

# 验证码超时时长，单位：秒；
# 默认值：30 ；
# galaxyplatform.security.web.verify.timeout=30

# 是否验证登录；默认为 true ；
# 设置为 true 时，自动将登录处理地址加入
# galaxyplatform.security.web.verify.filter.verify-login=true

# 验证码校验 URL ； 要校验验证码的 URL 列表；
# galaxyplatform.security.web.verify.filter.urls=/api/bs/**

# 验证码比较时是否忽略大小写；默认为 true ；
# galaxyplatform.security.web.verify.filter.ignore-case=true

# 是否通过HTTP请求头携带请求者输入的验证码； 默认为 true ；
# 如果为 false ，则表示通过请求参数或表单字段传递；
# galaxyplatform.security.web.verify.request.header-enable=true

# 验证码在 HTTP 请求头或参数中的 key ；默认值： VerificationCode ;
# galaxyplatform.security.web.verify.request.key=VerificationCode






#------------------------
# 账户数据库设置；
#------------------------
# 账户数据库类型；
# 默认为空；
# 可选值是平台的组件提供的实现来决定的；
# 平台默认实现了基于 mongodb 实现的账户数据库，通过将 dbType 设置为 mongodb 激活该特性；
galaxyplatform.security.account.db-type=mongodb

# 账户信息的存储仓库的名称；
# 对应于 galaxyplatform.kvs.repos 设置的存储仓库；
# 此属性指定的KV存储库被系统用于创建默认的 AccountRepository 实例；
# 但如果应用上下文已经注册了 AccountRepository 实例 ，则忽略此属性；
# 如果应用上下文既没有注册 link AccountRepository 实例，也没有设置此属性，系统则基于内存存储创建默认的
#galaxyplatform.security.account.repository=app-db


#设置可匿名访问 URL 规则；多项规则以英文逗点“,”分隔；
# galaxyplatform.security.web.anonymous-urls=/,/index.html

#文件服务 ffs 开放匿名访问的 API ，用于实现基于 token 认证，并提供 CORS 访问 ；
# galaxyplatform.security.web.anonymous-urls=/api/ffs/secure/**

#登录操作后不强制自动重定向，由客户端通过 HTTP 头部 No-Redirect 指示是否自动跳转；
galaxyplatform.security.web.redirect.required=false
#galaxyplatform.security.web.redirect.no-redirect-header-name=No-Redirect

# 开启 HTTP Basic ；
# 注意：这是一种不安全的认证方式，仅适用于在开发状态下为进行与前端或第三方的集成测试提供便利，而不应作为生产环境而开启；
# galaxyplatform.security.web.http-basic.enable=true


#######################################
# 基于 RocksDB 的嵌入式 KV 数据库
#######################################

# 声明一个 rockskv 仓库 appdb ;
# 并以 appdb 为名注册该仓库的根存储对象 KVStorage 为 Bean；
#galaxyplatform.kvs.repos.appdb.uri=rockskv:/appdb


#######################################
# Blockchain 区块链
#######################################
# blockchain.client.enable=false
# blockchain.client.ledger=
# blockchain.client.gateway.host=blockchain.linkgie.com
# blockchain.client.gateway.port=443
# blockchain.client.gateway.https=true
# blockchain.client.default-signer.public-key=
# blockchain.client.default-signer.private-key=


