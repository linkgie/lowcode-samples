
#######################################
# 机构注册配置；
#######################################
# 通过配置文件可以预置一个或多个机构；
# 前缀：galaxyplatform.security.organization.registry.orgs
# 注：实际能够创建的机构数量会受到 license 的限制；

# 注册一个机构:
# 命名规则：以 .orgs.<机构编码> 定义机构的各项属性，
#   如：.orgs.testcom.name=测试机构 ，注册一个编码为 “testcom” 的机构，名称为 “测试机构”
# 
# 分别以不同的名称设置多个，便可以注册多家机构，如： .orgs.testcom1.name=测试机构1

# 机构的名称；
galaxyplatform.security.organization.registry.orgs.testcom.name=测试机构
# 机构的描述；
galaxyplatform.security.organization.registry.orgs.testcom.description=测试机构
# 是否立即启用机构；
galaxyplatform.security.organization.registry.orgs.testcom.setup=true

# 机构授权；
# orgs.testcom.authorities 给编码为“testcom”的机构授权；
#
galaxyplatform.security.organization.registry.orgs.testcom.authorities=FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-SETTINGS,\
                                                                        FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-MEMBER-REGISTER,\
                                                                        FEATURE://CONSOLE/MENU/ORG-MANAGEMENT/ORG-MEMBER-AUTHORIZE,\
                                                                        FEATURE://APPLICATION/MENU/HOME

# 注册机构管理员；
# 命名规则：orgs.<机构编码>.admin 给编码为“testcom”的机构设置管理账号的注册信息；
#
galaxyplatform.security.organization.registry.orgs.testcom.admin.username=admin
galaxyplatform.security.organization.registry.orgs.testcom.admin.password=abc@123
galaxyplatform.security.organization.registry.orgs.testcom.admin.name=默认机构管理员
galaxyplatform.security.organization.registry.orgs.testcom.admin.secureEmail=test@test.com

# 指定成员账号的默认角色；
# 后续还可以在控制台中进行设置；
# galaxyplatform.security.organization.registry.orgs.testcom.memberRoles=DEFAULT-MEMBER

# 注册成员账号；
# orgs.testcom.members.member1.name   为机构“testcom”注册一个编码为 member1 的成员账号，名称为 “成员1”
#
galaxyplatform.security.organization.registry.orgs.testcom.members.member1.name=成员1
galaxyplatform.security.organization.registry.orgs.testcom.members.member1.password=abc@123
galaxyplatform.security.organization.registry.orgs.testcom.members.member1.secureEmail=member1@test.com

# 授权成员权限；
galaxyplatform.security.organization.registry.orgs.testcom.members.member1.authorities=FEATURE://APPLICATION/MENU/HOME

# 授予机构成员 member1 角色 TEST-MEMBER；
# galaxyplatform.security.organization.registry.orgs.testcom.members.member1.roles=TEST-MEMBER

# 定义角色，以及角色的权限；
# galaxyplatform.security.rbac.authorities.DEFAULT-MEMBER=FEATURE://APPLICATION/MENU/HOME
# galaxyplatform.security.rbac.authorities.TEST-MEMBER=FEATURE://APPLICATION/MENU/HOME


#######################################
# 授权配置；
#######################################
# 说明：
# 通过配置文件进行授权，提供此种授权方式的目的是为开发操作便利；
# 通过配置 configurable 为 true 或 false 可以启用或禁用配置文件中的授权设置；
# 对于此配置生效的权限授权结果不会持久化到数据库中，而且在控制台中既不可见，也不可编辑；
# 
# 但是需要注意，在生产环境中要谨慎地开启此选项！！
# 因为配置文件的管理属于运维场景的，基于配置文件进行业务授权的管理方式不是严谨的安全管理方式，突破了“运维权限”与“业务权限”隔离的安全管理原则。
#
# 如果想保留配置文件授权的便利性，同时又要维护安全管理原则，可以在主目录下的 .setup/application.settings 配置文件进行配置，
# 而不是 conf/server.conf 配置文件。
# 这是因为 .setup/application.settings 配置文件在配置加载时具有更高的优先级，并且只能在应用发布之前配置，在发布后的安装部署环境中受到保护且不可更改。
#
# 基于 .setup/application.settings 配置文件，可以将一些只能在发布前配置、在生产环境中需要固化的配置项进行保护管理。
#

# 是否允许通过配置文件进行直接授权；默认为 false ；
galaxyplatform.security.authorization.configurable=true

# 授予的权限是否要受到实际主体的授权身份的约束；
# 默认为 false ；
#
# 如果设置为 true ，授予的权限会受到授权身份的实际权限的约束，例如受到所在机构的权限的限制；
# 如果设置为 false ，则直接合并到授权主体的权限列表；
#
# galaxyplatform.security.authorization.restrictable=false

# 授权
# galaxyplatform.security.authorization.orgs.testcom.members.member1.authorities=FEATURE://APPLICATION/MENU/TEST_VIEW2
# galaxyplatform.security.authorization.orgs.testcom.members.member2.authorities=FEATURE://APPLICATION/MENU/TEST_VIEW3

galaxyplatform.security.authorization.orgs.testcom.members.member1.authorities=FEATURE://APPLICATION/MENU/SIMPLE-FORM